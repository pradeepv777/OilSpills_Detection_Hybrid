# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Project-specific ignores
# ========================

# Virtual environment (exclude - users should create their own)
venv/

# Model checkpoints (keep best and final models)
output/checkpoints/checkpoint_epoch_*.pth
output/checkpoints/temp_*.pth

# Training logs and visualizations
output/logs/
output/visualizations/
output/masks/

# Results directory (keep structure but ignore large files)
results/masks/*.png
results/visualizations/*.png
results/checkpoints/

# Temporary files
*.tmp
*.temp
temp/
tmp/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# Large data files (uncomment if you have large datasets)
# *.h5
# *.hdf5
# *.npz
# *.npy

# Model files (exclude large model files - users should train their own)
*.pth
*.pt
*.pkl
*.pickle

# Dataset files (uncomment if you want to ignore dataset)
# dataset/
# *.jpg
# *.jpeg
# *.png
# *.tiff
# *.tif

# Backup files
*.bak
*.backup
*.old

# Log files
*.log
logs/

# Cache directories
.cache/
cache/

# TensorBoard logs (uncomment if you want to ignore)
# runs/
# tensorboard_logs/

# Weights and Biases
wandb/

# MLflow
mlruns/

# DVC
.dvc/

# Git LFS
*.zip
*.tar.gz
*.tar.bz2
*.7z
*.rar

# Project documentation build
docs/build/
site/

# Configuration files with sensitive data
config.ini
secrets.json
.secrets

# Database files
*.db
*.sqlite
*.sqlite3

# Compiled Python files
*.pyc
*.pyo
*.pyd

# Distribution files
*.egg
*.egg-info/

# Testing
.pytest_cache/
.coverage
htmlcov/

# Profiling
.prof

# Local development
local/
dev/
